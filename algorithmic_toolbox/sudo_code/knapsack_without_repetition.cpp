// dynamic approuch

20 4, 
12 7 18 5

12 + 7           = 0 1    => 19x
12 + 18          = 0 2    => 30x
12 + 5           = 0 3    => 17x
12 + 7  + 18     = 0 1 2  => 37
12 + 7  + 5      = 0 2 3  => 24
12 + 7  + 18 + 5 = 0 1 2 3=> 42
7  + 18          = 1 2    => 25x
7  + 5           = 1 3    => 12x
7  + 18 + 5      = 1 2 3  => 30
18 + 5           = 2 3    => 23x

res = [[0 1], [0 2], [0 3], [1 2], [1 3], [2 3]]

for (let i = 1; i < 4; i++) {
  val = [0 1 2 3]
  for (let j = 0; j < 4; j++) {
    if (i == j or i > j) continue;
    else push([i j]);
  }
}

let x = 1;
while (x < n) {
  for (let i = x; i < n; i++) {
    push([])
  }
  x++;
}

19 5, 
4 2 8 6 3

